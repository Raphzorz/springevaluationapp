{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/ecommerce/baskets/baskets.component.ts","webpack:///src/app/ecommerce/ecommerce.component.ts","webpack:///src/app/ecommerce/ecommerce.component.html","webpack:///src/app/ecommerce/models/product-basket.model.ts","webpack:///src/app/ecommerce/models/product-baskets.model.ts","webpack:///src/app/ecommerce/products/products.component.ts","webpack:///src/app/ecommerce/products/products.component.html","webpack:///src/app/ecommerce/services/EcommerceService.ts","webpack:///src/app/ecommerce/shopping-cart/shopping-cart.component.ts","webpack:///src/app/ecommerce/shopping-cart/shopping-cart.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","ecommerceService","logged","users","userName","getUserByName","subscribe","forEach","loggedUser","error","console","log","userNotFound","element","document","getElementById","classList","add","selector","templateUrl","styleUrls","providers","AppModule","declarations","imports","bootstrap","BasketsComponent","baskets","ProductBaskets","paid","sub","BasketsChanged","EcommerceComponent","collapsed","basketFinished","productsC","reset","shoppingCartC","basketsC","toggleCollapsed","finishBasket","ProductBasket","product","user","productBaskets","ProductsComponent","products","toAddToCartList","productSelected","name","selectedCategory","filter","loadProducts","loadBaskets","addEventListener","validateTextField","event","regex","RegExp","test","key","preventDefault","remove","sucessdiv","contains","triggered","listOfCardIds","checkCartForDuplicates","i","length","j","checked","addToCart","listOfCartIds","push","basket","SelectedProductBasket","selectedProductBasket","findIndex","value","getAllProducts","includes","splice","indexOf","target","keyword","getProductByKeyword","shoppingCartBaskets","keyListener","selectChangeHandler","loadFilteredProducts","addCheckedItemsToCart","EcommerceService","http","productsUrl","basketsUrl","saveUsersUrl","getUserNameUrl","keywordSearchUrl","productBasketSubject","basketsSubject","ProductBasketChanged","asObservable","get","category","post","productBasket","next","ShoppingCartComponent","myEvent","listOfAlreadyPurchasedProducts","safeToSave","onBasketFinished","loadCart","unsubscribe","index","getProductIndex","checkForPreviousPurchases","saveToBasket","saveBasket","checkBeforeSaveToBasket","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, ViewChild} from '@angular/core';\nimport {EcommerceService} from \"./ecommerce/services/EcommerceService\";\nimport {EcommerceComponent} from \"./ecommerce/ecommerce.component\";\nimport {User} from \"./ecommerce/models/users.model\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [EcommerceService]\n})\nexport class AppComponent {\n  logged = false\n  users: User[] = [];\n  @ViewChild('ecommerceC')\n  ecommerceC: EcommerceComponent;\n\n  constructor(private ecommerceService: EcommerceService) {\n  }\n\n  ngOnInit() {\n  }\n\n  //The database is queried for a matching entry\n  login(userName) {\n    this.ecommerceService.getUserByName(userName)\n      .subscribe(\n        (users: any) => {\n          this.users = users;\n          this.users.forEach(users => {\n              if (users.userName) {\n                this.logged = true;\n                //Assigning the logged user to be the user selected/logged in\n                this.ecommerceService.loggedUser = users;\n              }\n            },\n            (error) => console.log(error)\n          );\n        })\n    //If the user did not log in then the username is wrong\n    if (!this.logged) {\n      this.userNotFound();\n    }\n  }\n\n// In case a wrong loginis entered\n  userNotFound() {\n    const element = document.getElementById(\"login-input-bar\");\n    element.classList.add(\"error-class\");\n  }\n}\n\n","<!--First screen that the user sees, the \"login\" form-->\n<div>\n  <div *ngIf=\"!logged\" class=\"container align-content-center justify-content-center\">\n    <div class=\" my-5\">\n      <div class=\"card-body\">\n        <div class=\"sidenav\">\n          <div class=\"login-main-text\">\n            <h2>Evaluation App</h2>\n            <p>Enter your username to enter the store</p>\n          </div>\n        </div>\n        <div class=\"main\">\n          <div class=\"col-md-6 col-sm-12\">\n            <div class=\"login-form\">\n              <form>\n                <div class=\"form-group\">\n                  <label for=\"login-input-bar\">Enter your user name</label><input #userInput type=\"text\"\n                                                                                  class=\"form-control\"\n                                                                                  id=\"login-input-bar\"\n                                                                                  placeholder=\"User Name\">\n                </div>\n                <button (click)=\"login(userInput.value)\" type=\"submit\" class=\"btn btn-login\">Login</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <app-ecommerce #ecommerceC [hidden]=\"!logged\"></app-ecommerce>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppComponent} from './app.component';\nimport {EcommerceComponent} from './ecommerce/ecommerce.component';\nimport {ProductsComponent} from './ecommerce/products/products.component';\nimport {ShoppingCartComponent} from './ecommerce/shopping-cart/shopping-cart.component';\nimport {BasketsComponent} from './ecommerce/baskets/baskets.component';\nimport {EcommerceService} from \"./ecommerce/services/EcommerceService\";\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        EcommerceComponent,\n        ProductsComponent,\n        ShoppingCartComponent,\n        BasketsComponent\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    providers: [EcommerceService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ProductBaskets} from \"../models/product-baskets.model\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {EcommerceService} from \"../services/EcommerceService\";\n\n@Component({\n  selector: 'app-baskets',\n  templateUrl: './baskets.component.html',\n  styleUrls: ['./baskets.component.css',]\n})\nexport class BasketsComponent implements OnInit {\n  baskets: ProductBaskets;\n  productId: number;\n  paid: boolean;\n  sub: Subscription;\n\n  constructor(private ecommerceService: EcommerceService) {\n    this.baskets = this.ecommerceService.ProductBaskets;\n  }\n\n  ngOnInit() {\n    this.paid = false;\n    this.sub = this.ecommerceService.BasketsChanged.subscribe(() => {\n      this.baskets = this.ecommerceService.ProductBaskets;\n    });\n  }\n\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ProductsComponent} from \"./products/products.component\";\nimport {ShoppingCartComponent} from \"./shopping-cart/shopping-cart.component\";\nimport {BasketsComponent} from \"./baskets/baskets.component\";\nimport {} from \"../app.component\";\n\n@Component({\n  selector: 'app-ecommerce',\n  templateUrl: './ecommerce.component.html',\n  styleUrls: ['./ecommerce.component.css']\n})\nexport class EcommerceComponent implements OnInit {\n  collapsed = true;\n  basketFinished = false;\n\n  @ViewChild('productsC')\n  productsC: ProductsComponent;\n\n  @ViewChild('shoppingCartC')\n  shoppingCartC: ShoppingCartComponent;\n\n  @ViewChild('basketsC')\n  basketsC: BasketsComponent;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  toggleCollapsed(): void {\n    this.collapsed = !this.collapsed;\n  }\n\n  finishBasket(basketFinished: boolean) {\n    this.basketFinished = basketFinished;\n  }\n\n  reset() {\n    this.basketFinished = false;\n    this.productsC.reset();\n    this.shoppingCartC.reset();\n    this.basketsC.paid = false;\n  }\n}\n","<!--This component is the main layout of the page-->\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"#\">Raphael Ellul Falzon</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\" aria-label=\"Toggle navigation\" (click)=\"toggleCollapsed()\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div id=\"navbarResponsive\" [ngClass]=\"{'collapse': collapsed, 'navbar-collapse': true}\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item active\">\n          <app-shopping-cart (onBasketFinished)=finishBasket($event) #shoppingCartC\n                             [hidden]=\"basketFinished\"></app-shopping-cart>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <app-products #productsC [hidden]=\"basketFinished\"></app-products>\n  </div>\n  <div class=\"col-md-3\">\n\n  </div>\n  <div class=\"col-md-6 offset-3\">\n    <app-baskets #basketsC [hidden]=\"!basketFinished\"></app-baskets>\n  </div>\n</div>\n","import {Product} from \"./product.model\";\nimport {User} from \"./users.model\";\n\nexport class ProductBasket {\n  product: Product;\n  user: User;\n\n  constructor(product: Product, user: User) {\n    this.product = product;\n    this.user = user;\n  }\n}\n","import {ProductBasket} from \"./product-basket.model\";\r\n\r\nexport class ProductBaskets {\r\n  productBaskets: ProductBasket[] = [];\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {ProductBasket} from \"../models/product-basket.model\";\nimport {EcommerceService} from \"../services/EcommerceService\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {ProductBaskets} from \"../models/product-baskets.model\";\nimport {Product} from \"../models/product.model\";\nimport {User} from \"../models/users.model\";\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css'],\n})\nexport class ProductsComponent implements OnInit {\n  productBaskets: ProductBasket[] = [];\n  products: Product[] = [];\n  toAddToCartList = [];\n  selectedProductBasket: ProductBasket;\n  private shoppingCartBaskets: ProductBaskets;\n  sub: Subscription;\n  productSelected: boolean = false;\n  name: string = \"\";\n  selectedOption: string;\n  selectedCategory: string = 'All'\n  user: User;\n\n\n  constructor(private ecommerceService: EcommerceService) {\n  }\n\n  ngOnInit() {\n    this.productBaskets = [];\n    this.loadProducts();\n    this.loadBaskets();\n  }\n\n  keyListener() {\n    document.getElementById('search-bar').addEventListener('keypress', e => this.validateTextField(e));\n  }\n  // Regex\n  validateTextField(event) {\n    var regex = new RegExp(\"^[a-zA-Z\\\\s]*$/*\");\n    const element = document.getElementById(\"search-bar\");\n    if (!regex.test(event.key)) {\n      event.preventDefault();\n      element.classList.add(\"error-class\");\n      return false;\n    } else {\n      element.classList.remove(\"error-class\");\n    }\n  }\n\n\n  filter = false;\n\n  addCheckedItemsToCart() {\n\n    // This triggers if the user has made a purchase earlier\n    const sucessdiv = document.getElementById(\"success\")\n    if (!sucessdiv.classList.contains(\"d-none\")) {\n      sucessdiv.classList.add(\"d-none\")\n    }\n\n    //First checking what products there are in the cart so as not to add duplicates.\n\n    var triggered = false;\n\n    var listOfCardIds = this.checkCartForDuplicates();\n\n    let i;\n    for (i = 0; i < this.toAddToCartList.length; ++i) {\n      // Remove the checked state of the checkboxes that have been added\n      triggered = false;\n      let j;\n      for (j = 0; j < listOfCardIds.length; ++j) {\n\n        if (listOfCardIds[j] == this.toAddToCartList[i].product.id) {\n          // this.toAddToCartList.splice(i,1)\n          triggered = true;\n          break;\n        }\n      }\n      // @ts-ignore\n      document.getElementById(this.toAddToCartList[i].product.id).checked = false;\n      document.getElementById(\"tr-\" + this.toAddToCartList[i].product.id).classList.remove(\"selected-class\");\n      if (!triggered) {\n        this.addToCart(this.toAddToCartList[i]);\n      }\n\n    }\n    // Clear cart after adding to basket\n    this.toAddToCartList = [];\n\n  }\n\n  checkCartForDuplicates() {\n    var listOfCartIds = [];\n    let j;\n    for (j = 0; j < this.ecommerceService.ProductBaskets.productBaskets.length; ++j) {\n      listOfCartIds.push(this.ecommerceService.ProductBaskets.productBaskets[j].product.id)\n    }\n    return listOfCartIds;\n  }\n\n  addToCart(basket: ProductBasket) {\n\n    this.ecommerceService.SelectedProductBasket = basket;\n    this.selectedProductBasket = this.ecommerceService.SelectedProductBasket;\n    this.productSelected = true;\n  }\n\n\n  getProductIndex(product: Product): number {\n    return this.ecommerceService.ProductBaskets.productBaskets.findIndex(\n      value => value.product === product);\n  }\n\n  loadProducts() {\n    this.ecommerceService.getAllProducts()\n      .subscribe(\n        (products: any[]) => {\n          this.products = products;\n          this.products.forEach(product => {\n            this.productBaskets.push(new ProductBasket(product, this.user));\n          })\n        },\n        (error) => console.log(error)\n      );\n  }\n\n  // Products are added to this \"virtual\" list (not seen by the user) before being added to the cart\n  addToCartPreemptiveList(product) {\n    const element = document.getElementById(\"tr-\" + product.product.id);\n    if (!this.toAddToCartList.includes(product)) {\n      element.classList.add(\"selected-class\");\n      this.toAddToCartList.push(product);\n      return;\n    } else {\n      element.classList.remove(\"selected-class\");\n      this.toAddToCartList.splice(this.toAddToCartList.indexOf(product), 1)\n    }\n  }\n\n\n  //event handler for the select element's change event\n  selectChangeHandler(event: any) {\n    //update the ui\n    this.selectedCategory = event.target.value;\n  }\n\n  loadFilteredProducts(keyword) {\n\n    //  First remove the checked products so as not to be able to add unseen products\n    this.toAddToCartList = [];\n    this.ecommerceService.getProductByKeyword(keyword, this.selectedCategory)\n      .subscribe(\n        (products: any[]) => {\n          this.products = products;\n          // Delete the list before adding the item\n          this.productBaskets = [];\n          this.products.forEach(product => {\n            this.productBaskets.push(new ProductBasket(product, this.user));\n          })\n        },\n        (error) => console.log(error)\n      );\n  }\n\n  loadBaskets() {\n    this.sub = this.ecommerceService.BasketsChanged.subscribe(() => {\n      this.shoppingCartBaskets = this.ecommerceService.ProductBaskets;\n    });\n  }\n\n  reset() {\n    this.productBaskets = [];\n    this.loadProducts();\n    this.ecommerceService.ProductBaskets.productBaskets = [];\n    this.loadBaskets();\n    this.productSelected = false;\n  }\n\n}\n","<div class=\"container\">\n  <h1 class=\"display-2 font-weight-bold\">Products</h1>\n  <div class=\"container\">\n    <form id=\"search-form\">\n      <div class=\"form-group form-inline\">\n        <label for=\"search-bar\"></label>\n        <!--        Key listener to combine with regex and stop unwanted chars from appearing-->\n        <input id=\"search-bar\" (keypress)=\"keyListener()\" maxlength=\"30\" pattern=\"^[a-zA-Z\\\\s]*$/*\"\n               placeholder=\"Search by product name\" type=\"text\" #titleInput class=\"  shadow-sm form-control\">\n        <label for=\"product-types\">\n        </label>\n        <!--        The change handler keeps track of what category is selected-->\n        <select (change)=\"selectChangeHandler($event)\" id=\"product-types\" #chosenCategory name=\"productType\"\n                class=\" ml-2 form-control form-control-md shadow-sm  rounded\" form=\"search-form\">\n          <option hidden>Category</option>\n          <option>All</option>\n          <option value=\"Music\">Music</option>\n          <option value=\"Games\">Games</option>\n          <option value=\"Books\">Books</option>\n        </select>\n        <button class=\"ml-2 btn \" (click)=\"loadFilteredProducts(titleInput.value)\">Search<i class=\"ml-2 fa fa-search\"\n                                                                                            aria-hidden=\"true\"></i>\n        </button>\n        <form>\n          <button class=\"btn  add-button\" (click)=\"addCheckedItemsToCart()\">Add selected to cart</button>\n        </form>\n      </div>\n    </form>\n  </div>\n\n  <!--  Table starts here which is populated by the database-->\n  <table class=\"table text-center\">\n    <thead class=\"thead-dark\">\n    <tr>\n      <th>Product</th>\n      <th>Product Type</th>\n      <th>Select For Purchase</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr id=\"tr-{{basket.product.id}}\" *ngFor=\"let basket of productBaskets\">\n      <td>{{basket.product.productName}}</td>\n      <td>{{basket.product.productType}}</td>\n      <td>\n        <!--        <input type=\"checkbox\" [(ngModel)]=\"basket.product.id\">-->\n        <div class=\"custom-control custom-checkbox custom-checkbox-green\">\n          <input type=\"checkbox\" class=\"custom-control-input-green custom-control-input\" name=\"cb\"\n                 id=\"{{basket.product.id}}\"\n                 [ngModel]=\"filter\" (ngModelChange)=\"(addToCartPreemptiveList(basket))\">\n          <label class=\"custom-control-label\" for=\"{{basket.product.id}}\"></label>\n          <!--        [ngModel]=\"filter\"  (ngModelChange)=\"onFilterChange(addOrRemoveFromCart(basket,filter))\">-->\n        </div>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n","import {ProductBasket} from \"../models/product-basket.model\";\nimport {Subject} from \"rxjs/internal/Subject\";\nimport {ProductBaskets} from \"../models/product-baskets.model\";\nimport {User} from \"../models/users.model\";\nimport {HttpClient} from '@angular/common/http';\nimport {Injectable} from \"@angular/core\";\n\n//This class takes care of the communications between the backend & frontend\n\n@Injectable()\nexport class EcommerceService {\n  private productsUrl = \"/api/products\";\n  private basketsUrl = \"/api/baskets\";\n  private saveUsersUrl = \"/api/users/save-user?userName=\";\n  private getUserNameUrl = \"/api/users/get-user-by-name?userName=\";\n  private keywordSearchUrl = \"/api/products/filter-products?keyword=\";\n\n  private productBasket: ProductBasket;\n\n  loggedUser: User;\n  //Product Baskets is the list of items in the cart\n  private baskets: ProductBaskets = new ProductBaskets();\n\n  private productBasketSubject = new Subject();\n  private basketsSubject = new Subject();\n  private users = new Subject();\n\n  ProductBasketChanged = this.productBasketSubject.asObservable();\n  BasketsChanged = this.basketsSubject.asObservable();\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAllProducts() {\n    return this.http.get(this.productsUrl);\n  }\n\n  getUserByName(userName) {\n    return this.http.get<User>(this.getUserNameUrl + userName);\n  }\n\n  getProductByKeyword(keyword, category) {\n    return this.http.get(this.keywordSearchUrl + keyword + \"&category=\" + category);\n  }\n\n  checkForPreviousPurchases(basket: ProductBaskets) {\n    return this.http.post(this.basketsUrl + \"/check\", basket)\n  }\n\n  saveBasket(basket: ProductBaskets) {\n    return this.http.post(this.basketsUrl, basket);\n  }\n\n  set SelectedProductBasket(value: ProductBasket) {\n    this.productBasket = value;\n    this.productBasketSubject.next();\n  }\n\n  get SelectedProductBasket() {\n    return this.productBasket;\n  }\n\n  set ProductBaskets(value: ProductBaskets) {\n    this.baskets = value;\n    this.basketsSubject.next();\n  }\n\n  get ProductBaskets() {\n    return this.baskets;\n  }\n\n\n}\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {ProductBaskets} from \"../models/product-baskets.model\";\nimport {ProductBasket} from \"../models/product-basket.model\";\nimport {EcommerceService} from \"../services/EcommerceService\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {Product} from \"../models/product.model\";\nimport {User} from \"../models/users.model\";\nimport {newArray} from \"@angular/compiler/src/util\";\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit, OnDestroy {\n  @Output() myEvent = new EventEmitter();\n  basketFinished: boolean;\n  baskets: ProductBaskets;\n  sub: Subscription;\n  user: User;\n  products: Product[] = [];\n  listOfAlreadyPurchasedProducts: Product[] = [];\n  @Output() onBasketFinished: EventEmitter<boolean>;\n  safeToSave: boolean = false;\n\n  constructor(private ecommerceService: EcommerceService) {\n    this.basketFinished = false;\n    this.onBasketFinished = new EventEmitter<boolean>();\n  }\n\n  ngOnInit() {\n    this.baskets = new ProductBaskets();\n    this.loadCart();\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  //Removes an item from the cart\n  removeFromCart(productBasket: ProductBasket) {\n    let index = this.getProductIndex(productBasket.product);\n    if (index > -1) {\n      this.ecommerceService.ProductBaskets.productBaskets.splice(\n        this.getProductIndex(productBasket.product), 1);\n    }\n  }\n\n  getProductIndex(product: Product): number {\n    return this.ecommerceService.ProductBaskets.productBaskets.findIndex(\n      value => value.product === product);\n  }\n\n  // This method is triggered whenever the ProductBasketChanged method is triggered\n  loadCart() {\n    this.user = this.ecommerceService.loggedUser;\n    this.sub = this.ecommerceService.ProductBasketChanged.subscribe(() => {\n      let productBasket = this.ecommerceService.SelectedProductBasket;\n      if (productBasket) {\n        if ((this.baskets.productBaskets))\n          this.baskets.productBaskets.push(new ProductBasket(\n            productBasket.product, this.ecommerceService.loggedUser));\n        //NB: This.baskets.productBaskets contains the User & The Product\n      }\n      //this.baskets or ProductBaskets are the list of items in the cart.\n      this.ecommerceService.ProductBaskets = this.baskets;\n      this.baskets = this.ecommerceService.ProductBaskets;\n    });\n  }\n\n  //Checks the user's purchase history and does not allow them to purchase the same product twice\n  checkBeforeSaveToBasket() {\n    this.safeToSave = false;\n    this.listOfAlreadyPurchasedProducts = [];\n    this.ecommerceService.checkForPreviousPurchases(this.baskets).subscribe(\n      (products: any[]) => {\n        this.products = products;\n\n        this.products.forEach(product => {\n            this.listOfAlreadyPurchasedProducts.push(product);\n          }\n        )\n        // If there are already purchased products then the basket shall be cancelled\n\n        if (this.listOfAlreadyPurchasedProducts.length < 1) {\n          this.safeToSave = true;\n        }\n        this.saveToBasket();\n      }\n      ,\n      (error) => console.log(error),\n    );\n\n  }\n\n  // If none of the items have been found in past purchases, this will trigger and save to basket\n  saveToBasket() {\n    if (this.safeToSave == true) {\n      this.ecommerceService.saveBasket(this.baskets).subscribe();\n      const sucessdiv = document.getElementById(\"success\")\n      sucessdiv.classList.remove(\"d-none\");\n      this.reset();\n    }\n  }\n\n  reset() {\n    this.basketFinished = false;\n    this.baskets = new ProductBaskets();\n    this.baskets.productBaskets = []\n    this.ecommerceService.ProductBaskets.productBaskets = []\n  }\n}\n","<!-- Button trigger modal -->\n<button type=\"button\" class=\"btn\" data-toggle=\"modal\" data-target=\"#shopping-cart\">\n  <span><div class=\"d-inline small btn-text\">Products ({{ baskets.productBaskets.length }})</div><i\n    class=\" ml-2 fa fa-shopping-cart\"></i></span>\n</button>\n\n<!-- Modal that triggers the cart -->\n<div class=\"modal fade\" id=\"shopping-cart\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"shopping-basket\"\n     aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"shopping-cart-label\">Shopping Basket</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n\n\n        <!--Shopping cart here-->\n        <div class=\" card bg-transparent mb-3 vw-25 bbasket-0\">\n          <div class=\"card-body\">\n            <div>\n              <h5 *ngIf=\"baskets.productBaskets.length!=0\" class=\"card-text\">Items In Basket:</h5>\n              <h5 *ngIf=\"baskets.productBaskets.length==0\" class=\"card-text\">Cart is Empty</h5>\n              <ul *ngIf=\"baskets.productBaskets.length!=0\" class=\"list-group-item bbasket-0\">\n                <li class=\"list-group-item\" *ngFor=\"let basket of baskets.productBaskets\">\n                  {{ basket.product.productName }} - {{ basket.product.productType}}.\n                  <button type=\"button\" class=\"close\" aria-label=\"remove-from-cart\" (click)=\"removeFromCart(basket)\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </li>\n              </ul>\n              <hr>\n\n              <button class=\"btn btn-light btn-block\" (click)=\"checkBeforeSaveToBasket()\"\n                      [disabled]=\"baskets.productBaskets.length == 0\">Finalise Purchase<i\n                class=\"ml-2 fa fa-shopping-cart\"></i>\n              </button>\n              <div *ngIf=\"listOfAlreadyPurchasedProducts.length!=0\"\n                   class=\"alert alert-danger alert-dismissible fade show\">\n                <strong>Attention!!</strong>\n                <p>Please remove the below items from your cart. They have already been\n                  purchased </p>\n                <p class=\"d-inline-flex ml-3\" *ngFor=\"let product of listOfAlreadyPurchasedProducts\">\n                  {{ product.productName }}</p>\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n              </div>\n              <div id=\"success\" class=\"alert alert-success mt-4 d-none\" role=\"alert\">\n                Your purchase was successful! :)\n              </div>\n              <p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}